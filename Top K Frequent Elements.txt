class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int x : nums)
        map.put(x,map.getOrDefault(x,0)+1);

        PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)->map.get(a) - map.get(b)); // min heap by value/freq butA elem are numbers
        for(int num : map.keySet())
       {
         pq.add(num);
         if(pq.size() > k)
         pq.poll();
       }

        int ans[] = new int[k];
        for(int i = 0; i < k; i++){
            ans[k - i - 1]=pq.poll();
        }
        return ans;
    }
}