/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {//trying dfs now - wish me luck!
    int sum = 0;
    int l = 0;
    int h = 0;
    //just got rid of the parameter list uff ! what a busy day !
    public int rangeSumBST(TreeNode root, int low, int high) {
        l = low;
        h = high;
        dfs(root);  // Hmm.. function name aaccha hai i like it!
        return sum;
    }
    private void dfs(TreeNode root){
        if(root == null) return ;
        
        if(root.val >= l && root.val <= h){
            //okay my root is in range 
            sum += root.val;
            //both can be my answer go on boss i can understand
            dfs(root.left);
            dfs(root.right);
        }
         // well i know a term.. wait it is.. yeah 'BRANCH PRUNING' I got it ! chase boss
        else if(root.val < l)
        dfs(root.right);
        else
        dfs(root.left);
    }
}