//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while (T-- > 0) {
            String[] s = br.readLine().trim().split(" ");
            int n = Integer.parseInt(s[0]);
            int m = Integer.parseInt(s[1]);
            char[][] grid = new char[n][m];
            for (int i = 0; i < n; i++) {
                String[] S = br.readLine().trim().split(" ");
                for (int j = 0; j < m; j++) {
                    grid[i][j] = S[j].charAt(0);
                }
            }
            Solution obj = new Solution();
            int ans = obj.numIslands(grid);
            System.out.println(ans);
        }
    }
}
// } Driver Code Ends


class Solution {
    // Function to find the number of islands.
    public int numIslands(char[][] grid) {
        // Code here
        int iland = 0;
        int m = grid.length;
        int n = grid[0].length;
        int visited[][] = new int[m][n];
        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] == '1' && visited[i][j] == 0){
                    iland++;
                    dfs(grid,visited,i,j);
                }
            }
        }
        return iland;
    }
    public void dfs(char[][] grid,int visited[][],int r , int c){
        int rd[] = {-1, -1, -1, 0, 1, 1, 1, 0};
        int cd[] = {-1, 0, 1, 1, 1, 0, -1, -1};
        
        visited[r][c] = 1;
        
        int m = grid.length;
        int n = grid[0].length;
        
        for(int i = 0; i < 8; i++){
            int nr = r + rd[i];
            int nc = c + cd[i];
            
            if(nr>=0 && nr < m && nc >= 0 && nc < n 
            && grid[nr][nc] == '1' && visited[nr][nc] == 0)
            dfs(grid,visited,nr,nc);
            
        }
    }
}