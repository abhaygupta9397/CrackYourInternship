/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {// #Beauty of Recursion
        return fun(root,Long.MIN_VALUE ,Long.MAX_VALUE); // edge case if root.val == Integer.MAX_VALUE
    }
    // think of it more basic
    private boolean fun(TreeNode root, long min , long max){
        if(root == null)         // no more node return true;
        return true;

        if(root.val <= min || root.val >= max) // this is out of bound invalid bst
        return false;
        // check for right and left
        return fun(root.right,root.val,max) && fun(root.left,min,root.val);
    }
}