class Solution {
    // Function to find minimum number of pages.
    public static long findPages(int n, int[] arr, int m) {
        // Your code here
        //Binary search - monotonic range [0 , sum of all pages]
        
        if(m > n)return -1;
        
        int sum = 0;
        int max = 0;
        for(int x : arr)
        {sum += x;
        if(x > max)
        max = x;
        }
        
        int ans = -1;
        int start = max;
        int end = sum;
        int mid = start + (end - start) / 2;
        while(start <= end){
            mid = start + (end - start) / 2;
            if(isPossible(arr,mid,m,n))
            {
                ans = mid;
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }
        return ans;
        
    }
    static boolean isPossible(int arr[],int mid , int m , int n){
        int pages = 0;
        int child = 1;
        for(int i = 0; i < n; i++){
            if(pages + arr[i] <= mid){
                pages += arr[i];
            }
            else{
                child++;
                if(child > m || arr[i] > mid)
                return false;
                pages = arr[i];
            }
        }
        return true;
    } 
};