/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        int l = nums.length;
        if(l == 0)
        return null;

        TreeNode head = helper(nums,0,l-1);
        return head;
    }
    //recursive function to give me the bst
    public TreeNode helper(int []num , int low , int high){
        if(low > high)
        return null;

        int mid = low + (high - low) / 2;
        //make the root
        TreeNode node = new TreeNode(num[mid]);
        // get the left node
        node.left = helper(num,low,mid - 1);
        // get the right node
        node.right = helper(num,mid+1,high);
        // return the root node
        return node;
    }
}