class Solution {
    public static int solve(int n, int k, int[] stalls) {
        if(k > n) return -1;
        Arrays.sort(stalls);
        int ans = -1;
        int start = 0;
        int end = stalls[n-1] - stalls[0];
        int mid = 0;
        while(start <= end){
            mid = start + (end - start) / 2;
            if(isPossible(stalls,n,k,mid)){
                ans = mid;
                start = mid + 1;
            }
            else{
                end = mid - 1;
            }
        }
        return ans;
    }
    static boolean isPossible(int arr[],int n , int k,int mid){
        int cows = 1;
        
        int ref = arr[0];
        for(int i = 1;i < n; i++){
            if(arr[i] - ref >= mid)
           {
               cows++;
               ref = arr[i];
               if(cows >= k)
               return true;
           }
        }
        return false;
    }
}